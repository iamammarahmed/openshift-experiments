apiVersion: v1
kind: Service
metadata:
  name: unitycatalog-postgresql
  namespace: unity-catalog
  labels:
    app.kubernetes.io/name: unitycatalog-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: unity-catalog
spec:
  selector:
    app.kubernetes.io/name: unitycatalog-postgresql
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unitycatalog-postgresql
  namespace: unity-catalog
  labels:
    app.kubernetes.io/name: unitycatalog-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: unity-catalog
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: unitycatalog-postgresql
  serviceName: unitycatalog-postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unitycatalog-postgresql
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: unity-catalog
    spec:
      containers:
        - name: postgres
          image: docker.io/library/postgres:15-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: unitycatalog-db-secret
                  key: UNITYCATALOG_JDBC_DATABASE
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: unitycatalog-db-secret
                  key: UNITYCATALOG_JDBC_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: unitycatalog-db-secret
                  key: UNITYCATALOG_JDBC_PASSWORD
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"
            initialDelaySeconds: 5
            periodSeconds: 5
      securityContext:
        fsGroup: 999
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 20Gi
